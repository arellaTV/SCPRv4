<%= form_block "Basic Information" do %>
  <%= f.input :title, input_html: { class: "sluggable" } %>
  <%= f.section "slug" %>
  <%= f.input :teaser, as: :string, hint: "Shown on summary/list pages that reference the program. Keep it to a sentence or so.", input_html: { class: "wide" } %>
  <%= f.input :description, hint: "Shown on the program's page. Be as descriptive as you like (hosts, topics, staff, etc.)", input_html: { class: "tiny" } %>
<% end %>

<%= form_block "Who/When" do %>
  <%= f.input :host %>
  <%= f.association :blog %>
  <%= f.input :air_status, collection: KpccProgram::AIR_STATUS, include_blank: false %>
  <%= f.input :airtime, hint: "Times this program can be heard" %>
<% end %>

<%= form_block "Associations" do %>
  <%= f.association :reporters, label: "Reporters" %>
  <%= f.association :tags, as: :grouped_select, collection: TagGroup.all, group_method: :tags, input_html: { :multiple => true }, hint: "Selecting a tag means that this program will now take ownership over it, and the tag will be removed from the other program it is currently owned by." %>
<% end %>

<%= form_block "Display Options" do %>
  <%= f.input :is_segmented, hint: "Does this program separate its episode into segments?" %>
  <%= f.input :is_featured, hint: "Whether or not this program is featured around the website" %>
  <%= f.input :audio_dir, label: "Audio directory" %>

<% end %>

<%= form_block "Featured Content" do %>
  <div id="featured_articles_aggregator" class="aggregator"></div>
  <%= f.input :program_articles_json, as: :hidden, input_html: { id: "program_articles_json" } %>

    <% content_for :footer do %>
      <script>
        new outpost.Aggregator(
          {
            el: "#featured_articles_aggregator", 
            inputEl: "#program_articles_json",
            collection: <%= render_json("api/private/v2/articles/collection", articles: record.program_articles.includes(:article).map {|a| a.article.to_article}) %>,
            apiType: "private",
            view: {
              dropMaxLimit: 6,
              dropMinLimit: 2,
              dropRejectOverflow: false
            },
            params: {
              limit: 20,
              types: 'segments,episodes',
              token: "<%= Rails.configuration.x.api.kpcc.private.api_token %>",
              order: "public_datetime",
              sort_mode: "desc",
              with: { published: true }
            }
          }
        );
      </script>
    <% end %>
<% end %>

<%= form_block "Quote" do %>
  <div class="alert alert-info">
    This Quote is <strong>optional</strong> â€” all of the fields can be left blank, and no quote will show on the Program page. If you want to show a quote, you must fill in at least the "Text" field.
  </div>

  <%= f.simple_fields_for :quote, record.quote || record.build_quote do |qf| %>
    <%= qf.input :source_name, hint: "The source of the quote. Example: 'Barack Obama'" %>
    <%= qf.input :source_context, hint: "The context in which the quote was delivered. Example: 'Press Meeting, June 10'" %>
    <%= qf.input :text, hint: "The actual text of the quote.", input_html: { class: "tiny" } %>
    <%= qf.input :_destroy, as: :boolean, label: "Clear this Quote" %>

    <div class="alert alert-info">
      Choose the source article for the <strong>Featured Quote</strong>, if applicable.
    </div>

    <%= qf.full_errors :content %>
    <div id="aggregator_quote_content" class="aggregator short"></div>
    <%= qf.input :content_json, as: :hidden, input_html: { id: "quote_content_json" } %>

    <% content_for :footer do %>
      <script>
        new outpost.Aggregator(
          {
            el: "#aggregator_quote_content",
            inputEl: "#quote_content_json",
            collection: <%= render_json("api/private/v2/articles/collection", articles: Array(qf.object.article)) %>,
            apiType: "private",
            view : {
              dropMaxLimit: 1,
              dropRejectOverflow: true,
              active: "search"
            },
            params: {
              limit: 20,
              types: 'news,blogs,segments,shells,events',
              token: "<%= Rails.configuration.x.api.kpcc.private.api_token %>",
              order: "public_datetime",
              sort_mode: "desc",
              with: { published: true }
            }
          }
        );
      </script>
    <% end %>
  <% end %>
<% end %>

<%= f.section "related_links" %>


